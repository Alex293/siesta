/**
 * General
 */

@function strip-unit($number) {
	@return $number / ($number * 0 + 1);
}



/**
 * Rhythm & Fonts
 */

@function rhythm($lines, $font-size: $base-font-size) {
    @return $base-line-height * $lines * ($base-font-size / $font-size) * 1em;
}

@mixin adjust-font-size-to($font-size: $base-font-size, $line-height: $base-line-height) {
    font-size: $font-size;
    line-height: $base-font-size / $font-size * $line-height + 0.00001;
}



/**
 * Images
 */

@mixin background-image-retina($image, $image2x, $width: false) {
    background-image: url($image);

    @media (-webkit-min-device-pixel-ratio: 1.3), (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
        background-image: url($image2x);

        @if $width {
            background-size: $width auto;
        }
    }
}



/**
 * Layout
 */

@function layout-width($layout: $mobile-layout) {
    $columns: map-get($layout, columns);
    @return (map-get($layout, column-width) * $columns) + (map-get($layout, gutter-width) * ($columns - 1));
}

@function layout-outer-width($layout: $mobile-layout) {
	@return layout-width($layout) + (map-get($layout, grid-padding) * 2);
}

@function grid-padding($layout: $mobile-layout, $strip-unit: true) {
    $grid-padding: map-get($layout, grid-padding);

	@if $strip-unit {
		@return strip-unit($grid-padding);
	}
	@else {
		@return $grid-padding;
	}
}

@mixin breakpoint($rules, $layout: $mobile-layout) {
	@include with-layout($layout) {
	    @media screen and #{$rules} {
	        @content;
	    }
	}
}

$context-layout: null !default;

@mixin with-layout($layout: $mobile-layout) {
	$context-layout: $layout !global;
    @content;
}



/**
 * Grid
 */

@function columns($columns) {
	$width: (map-get($context-layout, column-width) * $columns) + (map-get($context-layout, gutter-width) * ($columns - 1));

	@return percentage(strip-unit($width / layout-width($context-layout)));
}

@function gutter() {
	@return percentage(strip-unit(map-get($context-layout, gutter-width) / layout-width($context-layout)));
}

@mixin span($columns) {
	float: left;
	margin-right: gutter();
	width: columns($columns);
}
